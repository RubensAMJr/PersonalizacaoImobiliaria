// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PersonalizacaoImobiliaria.Infrastructure.Database.Context;

#nullable disable

namespace PersonalizacaoImobiliaria.Migrations
{
    [DbContext(typeof(PersonalizacaoImobiliariaContext))]
    [Migration("20250621001159_AddNomeCliente")]
    partial class AddNomeCliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PersonalizacaoImobiliaria.Domain.Entities.Personalizacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Personalizacao");
                });

            modelBuilder.Entity("PersonalizacaoImobiliaria.Domain.Entities.Solicitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("UnidadeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Solicitacao");
                });

            modelBuilder.Entity("PersonalizacaoImobiliaria.Domain.Entities.Unidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroUnidade")
                        .HasColumnType("integer");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Unidade");
                });

            modelBuilder.Entity("PersonalizacaoSolicitacao", b =>
                {
                    b.Property<Guid>("PersonalizacoesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SolicitacoesId")
                        .HasColumnType("uuid");

                    b.HasKey("PersonalizacoesId", "SolicitacoesId");

                    b.HasIndex("SolicitacoesId");

                    b.ToTable("PersonalizacaoSolicitacao");
                });

            modelBuilder.Entity("PersonalizacaoImobiliaria.Domain.Entities.Solicitacao", b =>
                {
                    b.HasOne("PersonalizacaoImobiliaria.Domain.Entities.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("PersonalizacaoSolicitacao", b =>
                {
                    b.HasOne("PersonalizacaoImobiliaria.Domain.Entities.Personalizacao", null)
                        .WithMany()
                        .HasForeignKey("PersonalizacoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalizacaoImobiliaria.Domain.Entities.Solicitacao", null)
                        .WithMany()
                        .HasForeignKey("SolicitacoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
